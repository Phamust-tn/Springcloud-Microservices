
services:
  # Eureka Discovery Server
  eureka-server:
    build: ./discovery
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Author Database
  author-db:
    image: postgres:15-alpine
    container_name: author-postgres
    restart: always
    environment:
      POSTGRES_DB: author_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - author_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Author Service
  author-service:
    build: ./Author
    container_name: author-service
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_healthy
      author-db:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

  # Book Database
  book-db:
    image: postgres:15-alpine
    container_name: book-postgres
    restart: always
    environment:
      POSTGRES_DB: book_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - book_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Book Service
  book-service:
    build: ./Book
    container_name: book-service
    ports:
      - "8082:8082"
    depends_on:
      eureka-server:
        condition: service_healthy
      book-db:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

networks:
  microservices-network:
    driver: bridge

volumes:
  author_db_data:
  book_db_data:
